<!DOCTYPE html>
<html>

<head>
  <title>AR.js QR Code Scanner with Models</title>
  <script src="https://aframe.io/releases/1.3.0/aframe.min.js"></script>
  <script src="https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar.js"></script>
  <style>
    #debugPanel {
      position: fixed;
      bottom: 20px;
      left: 20px;
      background: rgba(0, 0, 0, 0.7);
      color: white;
      padding: 10px;
      font-family: monospace;
      font-size: 14px;
      z-index: 1000;
      max-height: 200px;
      overflow-y: auto;
      width: 80%;
      border-radius: 5px;
    }
  </style>
  <script>
    let debugLog = [];
    const maxLogs = 10;

    function updateDebugPanel() {
      const debugPanel = document.getElementById('debugPanel');
      debugPanel.innerHTML = debugLog.join('<br>');
      debugPanel.scrollTop = debugPanel.scrollHeight;
    }

    function customLog(...args) {
      const message = args.join(' ');
      debugLog.push(new Date().toLocaleTimeString() + ': ' + message);
      if (debugLog.length > maxLogs) {
        debugLog.shift();
      }
      updateDebugPanel();
      console.log(...args);
    }

    // Define a mapping of QR code text values to 3D models
    const modelMapping = {
      'box': './Box.gltf',
      'sphere': './sphere.gltf',
      'cylinder': './cylinder.gltf',
    };

    AFRAME.registerComponent('markerhandler', {
      init: function () {
        this.el.addEventListener('markerFound', () => {
          const markerId = this.el.getAttribute('value');  // Use QR code text attribute
          customLog('QR Code found with text value:', markerId);

          const modelPath = modelMapping[markerId.toLowerCase()];
          if (modelPath) {
            const modelEntity = document.querySelector('#ar-model');
            modelEntity.setAttribute('gltf-model', modelPath);
            customLog('Loading model:', modelPath);
          } else {
            customLog('No model found for text value:', markerId);
          }
        });

        this.el.addEventListener('markerLost', () => {
          customLog('QR Code lost');
        });
      }
    });
  </script>
</head>

<body style="margin: 0; overflow: hidden;">
  <div id="debugPanel"></div>
  <a-scene embedded arjs='sourceType: webcam; debugUIEnabled: false;'>
    <!-- Detect QR codes using type="barcode" to capture text values -->
    <a-marker type="pattern" preset="custom" url="./pattern.patt" value="box" markerhandler>
      <a-entity id="ar-model" position="0 0 0" scale="0.5 1 0.5" rotation="0 0 0">
      </a-entity>
    </a-marker>

    <a-entity camera></a-entity>
  </a-scene>
</body>

</html>